<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.etc.dao.CommentDao">
  <resultMap id="BaseResultMap" type="com.etc.entity.Comment">
    <id column="commentid" jdbcType="INTEGER" property="commentid" />
    <result column="orderid" jdbcType="INTEGER" property="orderid" />
    <result column="commentcontent" jdbcType="VARCHAR" property="commentcontent" />
    <result column="commentpicture" jdbcType="VARCHAR" property="commentpicture" />
    <result column="commenttime" jdbcType="TIMESTAMP" property="commenttime" />
    <result column="commentlevel" jdbcType="INTEGER" property="commentlevel" />
    <result column="ordernum" jdbcType="VARCHAR" property="ordernum" />
  </resultMap>
  <sql id="Base_Column_List">
    commentid, orderid, commentcontent, commentpicture, commenttime, commentlevel, ordernum
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where commentid = #{commentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where commentid = #{commentid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.etc.entity.Comment">
    insert into comment (commentid, orderid, commentcontent, 
      commentpicture, commenttime, commentlevel
      )
    values (#{commentid,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, #{commentcontent,jdbcType=VARCHAR}, 
      #{commentpicture,jdbcType=VARCHAR}, #{commenttime,jdbcType=TIMESTAMP}, #{commentlevel,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.etc.entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentid != null">
        commentid,
      </if>
      <if test="orderid != null">
        orderid,
      </if>
      <if test="commentcontent != null">
        commentcontent,
      </if>
      <if test="commentpicture != null">
        commentpicture,
      </if>
      <if test="commenttime != null">
        commenttime,
      </if>
      <if test="commentlevel != null">
        commentlevel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentid != null">
        #{commentid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="commentcontent != null">
        #{commentcontent,jdbcType=VARCHAR},
      </if>
      <if test="commentpicture != null">
        #{commentpicture,jdbcType=VARCHAR},
      </if>
      <if test="commenttime != null">
        #{commenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentlevel != null">
        #{commentlevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.etc.entity.Comment">
    update comment
    <set>
      <if test="orderid != null">
        orderid = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="commentcontent != null">
        commentcontent = #{commentcontent,jdbcType=VARCHAR},
      </if>
      <if test="commentpicture != null">
        commentpicture = #{commentpicture,jdbcType=VARCHAR},
      </if>
      <if test="commenttime != null">
        commenttime = #{commenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentlevel != null">
        commentlevel = #{commentlevel,jdbcType=INTEGER},
      </if>
    </set>
    where commentid = #{commentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.etc.entity.Comment">
    update comment
    set orderid = #{orderid,jdbcType=INTEGER},
      commentcontent = #{commentcontent,jdbcType=VARCHAR},
      commentpicture = #{commentpicture,jdbcType=VARCHAR},
      commenttime = #{commenttime,jdbcType=TIMESTAMP},
      commentlevel = #{commentlevel,jdbcType=INTEGER}
    where commentid = #{commentid,jdbcType=INTEGER}
  </update>

  <!-- 查询所有评论 -->
  <select id="selectAllComment"  resultMap="BaseResultMap">
    select
    c.commentid,c.orderid,c.commentcontent,c.commentpicture,c.commenttime,c.commentlevel,orders.ordernum
    FROM `comment` c
    INNER JOIN orders
    ON c.orderid=orders.orderid
  </select>

  <!-- 分页+模糊查询 -->
  <select id="selectCommentByPage"  resultMap="BaseResultMap">
    select
    c.commentid,c.orderid,c.commentcontent,c.commentpicture,c.commenttime,c.commentlevel,orders.ordernum
    FROM `comment` c
    INNER JOIN orders
    ON c.orderid=orders.orderid
    <where>
      commentcontent LIKE concat("%",#{content},"%")
    </where>
    limit #{start},#{pageSize}
  </select>

  <!-- 查询总记录数 -->
  <select id="selectCount" resultType="java.lang.Integer">
    select COUNT(1)
    FROM `comment` c INNER JOIN orders ON c.orderid=orders.orderid
    <where>
      commentcontent LIKE concat("%",#{content},"%")
    </where>
  </select>
</mapper>